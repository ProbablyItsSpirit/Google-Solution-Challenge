# 🚀 GradeGood AI – Comprehensive Project Plan

---

## ✅ 💡 Project Name: `GradeGood AI`
### 🔥 Purpose:
An AI-powered **grading and feedback system** for educational institutions. Provides **automated grading, contextual feedback, classroom management,** and **RAG (Retrieval-Augmented Generation)** integration. Built using **FastAPI + Firebase + Gemini AI + FAISS**, accessible via **Flutter or React.js frontend**.

---

## 🛠️ Core Features

### ✅ 1. Authentication
- Google OAuth2 Login
- Separate roles: `Student`, `Teacher`

### ✅ 2. User Roles & Dashboards
- **Student Dashboard**:
  - View submitted assignments, grades, analytics
  - Access to feedback and past submissions
  - AI query chatbox

- **Teacher Dashboard**:
  - Class management (create/join/delete classrooms)
  - Upload assignments and question papers
  - View all student answer sheets and grade
  - Export student reports
  - Analyze student improvement

### ✅ 3. Smart File Upload System
- 3 Input Tabs:
  - `QP` – Question Paper Upload
  - `SP` – Solution Set/Book Upload
  - `AP` – Answer Sheet Upload

- Supported Formats:
  - `PDF, DOCX, TXT, Images (OCR), Audio (MP3, WAV)`

### ✅ 4. RAG-Driven Grading Engine
- Uses Gemini + FAISS for similarity search
- Uses solution/book content as reference for grading
- Scenarios:
  - Only QP → Generate solutions
  - QP + Answer Sheet → Grade with/without book
  - Only Answer Sheet → Ask for QP if needed
  - Only Solution → Saved for future use

### ✅ 5. Detailed Grading & Feedback
- Per-question feedback:
  - Correctness
  - Missing points
  - Suggestions
  - Referenced book page (if provided)
- Mark customization by teacher

### ✅ 6. Audio-To-Text Support
- Audio answers/questions are transcribed
- Supported formats: `.mp3`, `.wav`, `.m4a`

### ✅ 7. History & Memory
- Students can see performance history
- Teachers can analyze class improvements

### ✅ 8. Chat Assistant (AI)
- Context-aware queries
- Based on uploaded materials
- Explains answers & generates solutions

### ✅ 9. Notifications
- Students notified if a new assignment or grade is uploaded

### ✅ 10. Settings
- Dark/Light/Blue Themes
- Text Size
- Text-To-Speech (AI voice reads answers)

---

## 🔥 Frontend Layout Suggestions

### ✅ Navbar Tabs
- `Classroom`
- `AI Assistant`
- `Notifications`
- `Settings`

### ✅ Chat Assistant UI
- Pill-shaped chatbox
- Text + Audio Input
- Upload tabs above chatbox (QP, SP, AP)

### ✅ Classroom Tab UI
- Class Performance Summary
- Teacher Upload Center (Assignments/QPs)
- Student Upload (Answer Sheets only visible to teacher)
- Query Portal (Doubts)
- Class Join via Code/Link

### ✅ Sidebar Navigation
- Dashboard
- Chat History
- Settings
- Log Out

---

## 🔧 Firestore Database Structure

### Users Collection:
```json
/users/{userId} {
  name: "Shardul",
  email: "abc@gmail.com",
  role: "student" | "teacher",
  classrooms: ["classroomId1", "classroomId2"]
}
```

### Classrooms Collection:
```json
/classrooms/{classroomId} {
  className: "Grade 10 Physics",
  createdBy: "teacherUserId",
  joinCode: "X5Y7Z",
  students: ["userId1", "userId2"],
  assignments: ["assignmentId1", "assignmentId2"]
}
```

### Assignments Collection:
```json
/assignments/{assignmentId} {
  classroomId: "classroomId",
  qpUrl: "url_to_question_paper",
  spUrl: "url_to_solution",
  createdAt: timestamp
}
```

### Submissions Collection:
```json
/submissions/{submissionId} {
  assignmentId: "assignmentId",
  studentId: "userId",
  answerUrl: "url_to_answer_sheet",
  marksPerQuestion: [2, 4, 3, 5],
  gradingResult: {
    totalScore: 18,
    maxScore: 20,
    feedback: [
      { q: 1, correct: true, remarks: "Well explained", refPage: 34 },
      { q: 2, correct: false, remarks: "Missed formula", refPage: 12 }
    ]
  },
  timestamp: timestamp
}
```

---

## 🌐 FastAPI Endpoint Blueprint

### 🔹 Auth
```http
POST /auth/google-login
```
- Exchange OAuth2 token
- Return JWT and user info

### 🔹 Uploads
```http
POST /upload/question-paper
POST /upload/solution-book
POST /upload/answer-sheet
```

### 🔹 Grading
```http
POST /grade
Request Body:
{
  "assignmentId": "xyz",
  "studentId": "abc"
}
Response:
{
  "totalScore": 18,
  "feedback": [ ... ],
  "referencePages": [12, 34]
}
```

### 🔹 Classroom
```http
POST /classroom/create
POST /classroom/join
GET /classroom/{id}/students
```

### 🔹 AI Chat
```http
POST /chat/query
Request:
{
  "userId": "abc",
  "message": "What is the answer to Q3?",
  "contextFiles": ["qp", "book"]
}
Response:
{
  "reply": "Here is the answer with explanation...",
  "source": "Book page 21"
}
```

---

## 💎 Final Thoughts
GradeGood AI is a next-gen grading platform combining **AI + RAG + cloud storage** to revolutionize classroom learning, assignments, and assessments. Scalable, intuitive, and powerful.

